[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Topik 1 Data Import",
    "section": "",
    "text": "Sebelum melakukan data import kita perlu mengunduh file datasets pada link berikut atau klik ikon Github dan unduh file data yang diperlukan"
  },
  {
    "objectID": "index.html#data-preprocessing",
    "href": "index.html#data-preprocessing",
    "title": "Topik 4 Eksplorasi Data",
    "section": "4.1 Data Preprocessing",
    "text": "4.1 Data Preprocessing\nSekarang kita akan membahas beberapa metode manipulasi data untuk membersihkan dataset, menggabungkan berbagai dataset atau mengekstrak variabel dari bingkai data sebelum kita melompat ke beberapa dasar pemrograman.\n\n4.1.1 Extracting Data\nBingkai data adalah struktur data yang paling banyak digunakan di R karena menawarkan lebih banyak fleksibilitas dalam cara mereka dapat menangani data.\nMari kita lihat beberapa metode untuk mengekstrak data dari bingkai data. Kita akan menggunakan contoh dataset yang disebut us_stocks.csv\nMari kita impor menggunakan\nread.csv\n\ndata_stocks = read.csv(file =\"data/us_stocks.csv\", header = TRUE)\nhead(data_stocks)\n\n       Date  MSFT    IBM  AAPL   MCD    PG GOOG\n1 2/01/2002 33.52 121.50 11.65 26.49 40.00   NA\n2 3/01/2002 34.62 123.66 11.79 26.79 39.62   NA\n3 4/01/2002 34.45 125.60 11.84 26.99 39.22   NA\n4 7/01/2002 34.28 124.05 11.45 27.20 38.78   NA\n5 8/01/2002 34.69 124.70 11.30 27.36 38.88   NA\n6 9/01/2002 34.36 124.49 10.82 26.88 38.60   NA\n\n\nFungsi names atau colnames digunakan untuk mengakses nama kolom (atau variabel) dalam kumpulan data seperti yang ditunjukkan di bawah ini.\nFungsi row.names dapat digunakan untuk mengakses nama baris (jika ada) dari himpunan data\n\nnames(data_stocks)\n\n[1] \"Date\" \"MSFT\" \"IBM\"  \"AAPL\" \"MCD\"  \"PG\"   \"GOOG\"\n\n\n\ncolnames(data_stocks)\n\n[1] \"Date\" \"MSFT\" \"IBM\"  \"AAPL\" \"MCD\"  \"PG\"   \"GOOG\"\n\n\nVariabel data tertentu dapat diakses menggunakan nama atau indeks (nomor kolom) dalam bingkai data.\nUntuk memilih penggunaan kolom apa pun $ simbol diikuti dengan nama kolom atau namanya dalam tanda kurung siku seperti yang ditunjukkan pada contoh di bawah ini\n\nmsft_prices1 = data_stocks$MSFT  #the data is returned as a vector\nhead(msft_prices1)\n\n[1] 33.52 34.62 34.45 34.28 34.69 34.36\n\n\n\nmsft_prices2 = data_stocks[[\"MSFT\"]]  #the data is returned as a vector\nhead(msft_prices2)\n\n[1] 33.52 34.62 34.45 34.28 34.69 34.36\n\n\n\n# the following returns data as a data frame\nmsft_prices3 = data_stocks[\"MSFT\"]  #can also be used to access multiple columns\nhead(msft_prices3)\n\n   MSFT\n1 33.52\n2 34.62\n3 34.45\n4 34.28\n5 34.69\n6 34.36\n\n\nKolom data ini juga dapat diakses seperti matriks, menggunakan indeks matriks.\nMetode ini dapat mengembalikan baris lengkap, kolom lengkap, atau hanya elemen dari himpunan data.\n\n# MSFT is in the second column and leaving the row index blank returns all the\n# rows for the particular column\n\nmsft_prices4 = data_stocks[, 2]\n\nhead(msft_prices4)\n\n[1] 33.52 34.62 34.45 34.28 34.69 34.36\n\n\n\n# all the elements in row 4\ndata_stocks[4, ]\n\n       Date  MSFT    IBM  AAPL  MCD    PG GOOG\n4 7/01/2002 34.28 124.05 11.45 27.2 38.78   NA\n\n\n\n\n4.1.2 Combining Data Frames\nMungkin diperlukan untuk menggabungkan dua bingkai data selama pemrosesan data.\nIni dapat dilakukan dengan menumpuknya baris demi baris atau menggabungkannya dengan kolom menggunakan rbind dan cbind masing-masing.\nSaat menggunakan cbind Jumlah baris dalam kolom yang digabungkan harus sama panjangnya juga di\nrbind Jumlah kolom himpunan data yang digabungkan harus sama. Mari kita lihat contohnya :\n\n# First create a vector having the returns for msft\nmsft_ret = 100 * diff(log(data_stocks$MSFT))\n# combine the vector with the data\n\n\n# different length\nlength(msft_ret)\n\n[1] 2783\n\n\n\nlength(data_stocks$MSFT)\n\n[1] 2784\n\n\n\n# add one more value to vector msft_ret\nmsft_ret = c(0, msft_ret)\n# check the length\nlength(msft_ret)\n\n[1] 2784\n\n\n\n# lets combine now (it should work)\ndata_stocks_r = cbind(data_stocks, MSFT_RET = msft_ret)\nhead(data_stocks_r)  #shows one more column added to the data\n\n       Date  MSFT    IBM  AAPL   MCD    PG GOOG   MSFT_RET\n1 2/01/2002 33.52 121.50 11.65 26.49 40.00   NA  0.0000000\n2 3/01/2002 34.62 123.66 11.79 26.79 39.62   NA  3.2289274\n3 4/01/2002 34.45 125.60 11.84 26.99 39.22   NA -0.4922552\n4 7/01/2002 34.28 124.05 11.45 27.20 38.78   NA -0.4946904\n5 8/01/2002 34.69 124.70 11.30 27.36 38.88   NA  1.1889367\n6 9/01/2002 34.36 124.49 10.82 26.88 38.60   NA -0.9558364\n\n\n\n# create two dataframes from data_stocks\ndata_r1 = data_stocks[1:10, ]  #first 10 rows\ndata_r2 = data_stocks[2775:2784, ]  #last 10 rows\ndata_stocks_rbind = rbind(data_r1, data_r2)\nprint(data_stocks_rbind)\n\n           Date  MSFT    IBM   AAPL   MCD    PG   GOOG\n1     2/01/2002 33.52 121.50  11.65 26.49 40.00     NA\n2     3/01/2002 34.62 123.66  11.79 26.79 39.62     NA\n3     4/01/2002 34.45 125.60  11.84 26.99 39.22     NA\n4     7/01/2002 34.28 124.05  11.45 27.20 38.78     NA\n5     8/01/2002 34.69 124.70  11.30 27.36 38.88     NA\n6     9/01/2002 34.36 124.49  10.82 26.88 38.60     NA\n7    10/01/2002 34.64 122.14  10.62 26.81 38.46     NA\n8    11/01/2002 34.30 120.31  10.52 26.34 38.60     NA\n9    14/01/2002 34.24 118.05  10.58 26.02 39.35     NA\n10   15/01/2002 34.78 118.85  10.85 26.20 39.82     NA\n2775 17/12/2012 27.10 193.62 518.83 89.91 69.93 720.78\n2776 18/12/2012 27.56 195.69 533.90 90.52 69.97 721.07\n2777 19/12/2012 27.31 195.08 526.31 89.71 69.34 720.11\n2778 20/12/2012 27.68 194.77 521.73 90.04 69.82 722.36\n2779 21/12/2012 27.45 193.42 519.33 90.18 68.72 715.63\n2780 24/12/2012 27.06 192.40 520.17 89.29 68.52 709.50\n2781 26/12/2012 26.86 191.95 513.00 88.74 68.00 708.87\n2782 27/12/2012 26.96 192.71 515.06 88.72 67.97 706.29\n2783 28/12/2012 26.55 189.83 509.59 87.58 67.15 700.01\n2784 31/12/2012 26.71 191.55 532.17 88.21 67.89 707.38\n\n\n\n\n4.1.3 Sub setting and Logical Data Selection\nMisalkan kita ingin mengekstrak data dengan karakteristik tertentu seperti rentang nilai, dll.\nIni dapat dicapai dengan menggunakan pernyataan logis dalam notasi braket.\nContoh berikut mengilustrasikan. Lihat help(“&gt;”) untuk melihat lebih banyak operator perbandingan.\n\n# select all rows with Apple prices above 100\ndata_aaplgr100 = data_stocks[data_stocks$AAPL &gt; 100, ]\nhead(data_aaplgr100)\n\n          Date  MSFT    IBM   AAPL   MCD    PG   GOOG\n1342 2/05/2007 30.61 102.22 100.39 50.02 62.37 465.78\n1343 3/05/2007 30.97 102.80 100.40 49.91 62.00 473.23\n1344 4/05/2007 30.56 102.96 100.81 49.92 62.41 471.12\n1345 7/05/2007 30.71 103.16 103.92 49.50 62.18 467.27\n1346 8/05/2007 30.75 103.29 105.06 49.32 61.75 466.81\n1347 9/05/2007 30.78 104.38 106.88 49.84 62.01 469.25\n\n\n\nmin(data_aaplgr100$AAPL)  #check if the prices are above 100\n\n[1] NA\n\n\n\n# this give NA as the minimum which indicates that data frame has NA lets\n# remove NAs from data_aaplgr100 using na.omit function\ndata_aaplgr100 = na.omit(data_aaplgr100)\n# now check the minimum again\nmin(data_aaplgr100$AAPL)\n\n[1] 100.06\n\n\nFungsi yang digunakan dalam contoh di atas dapat digunakan untuk menghapus semua nilai kosong dalam himpunan data.\n\nhead(data_stocks)  #notice NAs in GOOG\n\n       Date  MSFT    IBM  AAPL   MCD    PG GOOG\n1 2/01/2002 33.52 121.50 11.65 26.49 40.00   NA\n2 3/01/2002 34.62 123.66 11.79 26.79 39.62   NA\n3 4/01/2002 34.45 125.60 11.84 26.99 39.22   NA\n4 7/01/2002 34.28 124.05 11.45 27.20 38.78   NA\n5 8/01/2002 34.69 124.70 11.30 27.36 38.88   NA\n6 9/01/2002 34.36 124.49 10.82 26.88 38.60   NA\n\n\n\ndata_stocks_googlena = data_stocks[!is.na(data_stocks$GOOG), ]\nhead(data_stocks_googlena)  #after removing NAs\n\n          Date  MSFT   IBM  AAPL   MCD    PG   GOOG\n663 19/08/2004 27.12 84.89 15.36 26.60 54.48 100.34\n664 20/08/2004 27.20 85.25 15.40 27.07 54.85 108.31\n665 23/08/2004 27.24 84.65 15.54 26.64 54.75 109.40\n666 24/08/2004 27.24 84.71 15.98 26.87 54.95 104.87\n667 25/08/2004 27.55 85.07 16.52 26.95 55.30 106.00\n668 26/08/2004 27.44 84.69 17.33 27.10 55.70 107.91\n\n\n\n# the above can still leave NAs in other columns use na.omit to remove all the\n# blank data\ndata_stocks_naomit = na.omit(data_stocks)\n\nMungkin ada persyaratan dalam pra pemrosesan data di mana seseorang mungkin harus memilih data dalam suatu rentang.\nContoh berikut memilih data di mana harga MSFT berada di antara 20 dan 30.\n& adalah operator Logika di R, lihat help(“&”) untuk melihat detail selengkapnya dan operator Logika lainnya.\n\ndata_msft = data_stocks_naomit[data_stocks_naomit$MSFT &lt;= 30 & data_stocks_naomit$MSFT &gt;\n    20, ]\nmin(data_msft$MSFT)  #check \n\n[1] 20.06\n\n\n\nargs(subset.data.frame)\n\nfunction (x, subset, select, drop = FALSE, ...) \nNULL\n\n\n\naaplgr100 = subset(data_stocks_naomit, AAPL &gt; 100)\nhead(aaplgr100)\n\n          Date  MSFT    IBM   AAPL   MCD    PG   GOOG\n1342 2/05/2007 30.61 102.22 100.39 50.02 62.37 465.78\n1343 3/05/2007 30.97 102.80 100.40 49.91 62.00 473.23\n1344 4/05/2007 30.56 102.96 100.81 49.92 62.41 471.12\n1345 7/05/2007 30.71 103.16 103.92 49.50 62.18 467.27\n1346 8/05/2007 30.75 103.29 105.06 49.32 61.75 466.81\n1347 9/05/2007 30.78 104.38 106.88 49.84 62.01 469.25\n\n\n\nmin(aaplgr100$AAPL)\n\n[1] 100.06"
  },
  {
    "objectID": "index.html#data-transformation-from-wide-to-long-or-vice-versa",
    "href": "index.html#data-transformation-from-wide-to-long-or-vice-versa",
    "title": "Topik 1 Pengenalan",
    "section": "4.2 Data Transformation from Wide to Long (or vice versa)",
    "text": "4.2 Data Transformation from Wide to Long (or vice versa)\nTerkadang diperlukan untuk mengubah data format lebar menjadi panjang, yang sering diperlukan untuk bekerja dengan paket ggplot2 (dibahas di bagian grafik) Paket R tidyr menyediakan dua fungsi pivot_longer() dan pivot_wider() untuk mengubah data menjadi format panjang atau lebar. Mari kita konversi data saham ke format panjang\n\nlibrary(tidyr)\n\nFinData_long = pivot_longer(data = data_stocks, cols = -Date, names_to = \"Stock\",\n    values_to = \"Price\")\nhead(FinData_long)\n\n# A tibble: 6 × 3\n  Date      Stock Price\n  &lt;chr&gt;     &lt;chr&gt; &lt;dbl&gt;\n1 2/01/2002 MSFT   33.5\n2 2/01/2002 IBM   122. \n3 2/01/2002 AAPL   11.6\n4 2/01/2002 MCD    26.5\n5 2/01/2002 PG     40  \n6 2/01/2002 GOOG   NA  \n\n\n\nFinData_wide = pivot_wider(FinData_long, names_from = Stock, values_from = Price)\nhead(FinData_wide)\n\n# A tibble: 6 × 7\n  Date       MSFT   IBM  AAPL   MCD    PG  GOOG\n  &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 2/01/2002  33.5  122.  11.6  26.5  40      NA\n2 3/01/2002  34.6  124.  11.8  26.8  39.6    NA\n3 4/01/2002  34.4  126.  11.8  27.0  39.2    NA\n4 7/01/2002  34.3  124.  11.4  27.2  38.8    NA\n5 8/01/2002  34.7  125.  11.3  27.4  38.9    NA\n6 9/01/2002  34.4  124.  10.8  26.9  38.6    NA"
  },
  {
    "objectID": "index.html#summary-statistics",
    "href": "index.html#summary-statistics",
    "title": "Topik 1 Pengenalan",
    "section": "4.3 Summary Statistics",
    "text": "4.3 Summary Statistics\nstatistik deskriptif ini memberi kita ringkasan yang dapat dikelola dan bermakna dari fenomena yang mendasarinya. Itulah isi bab ini. Kabar buruknya adalah bahwa penyederhanaan apa pun mengundang penyalahgunaan.\nSangat mudah untuk menghitung statistik ringkasan dasar dalam R, sebagian besar fungsi diberi nama sesuai dengan apa yang mereka lakukan.\nContoh berikut menunjukkan cara menghitung ukuran statistik dalam tabel-1 untuk harga Dow Jones dalam file data data_fin.csv\n\n# change the working directory to the folder containing data_fin.csv or provide\n# the full path with the filename\ndata_stocks = read.csv(\"data/data_fin.csv\")  #import data\nhead(data_stocks)\n\n        Date     DJI   AXP   MMM   ATT    BA   CAT CISCO    DD   XOM    GE\n1  3/01/2000 11357.5 45.82 47.19 47.19 40.12 24.31 54.05 65.00 39.09 49.95\n2  4/01/2000 10997.9 44.09 45.31 44.25 40.12 24.00 51.00 65.00 38.41 48.06\n3  5/01/2000 11122.7 42.96 46.62 44.94 42.62 24.56 51.19 67.75 40.50 47.70\n4  6/01/2000 11253.3 43.78 50.62 43.75 43.06 25.81 50.00 71.50 42.59 48.51\n5  7/01/2000 11522.6 44.42 51.47 44.12 44.12 26.66 52.94 71.62 42.31 50.28\n6 10/01/2000 11572.2 45.04 51.12 44.75 43.69 25.78 54.91 70.00 41.88 50.37\n     GS    HD    IBM  INTC   JNJ   JPM   MRK   MCD  MSFT   NKE\n1 88.31 65.50 115.56 43.47 46.09 48.69 64.04 39.62 58.34 12.03\n2 82.38 61.50 112.06 41.47 44.41 47.27 61.61 38.81 56.31 11.38\n3 78.88 61.44 116.00 41.81 44.88 46.98 64.22 39.44 56.91 12.03\n4 82.25 60.00 114.62 39.38 46.28 47.65 64.75 38.88 55.00 11.97\n5 82.56 62.81 113.31 41.00 47.88 48.52 70.97 39.75 55.72 11.97\n6 84.38 63.19 118.44 42.88 47.03 47.69 68.89 40.06 56.12 12.17\n\n\n\nDJI = data_stocks$DJI\nDJI = na.omit(DJI)  #remove NAs as it will affect the calculations\n# Arithmetic mean\nmean(DJI)\n\n[1] 11098.12\n\n\n\n# Geometric mean\nexp(mean(log(DJI)))\n\n[1] 10953.39\n\n\n\n# median\nmedian(DJI)\n\n[1] 10748.8\n\n# variance & standard deviation\nvar(DJI)\n\n[1] 3280347\n\nsd(DJI)\n\n[1] 1811.173\n\n# interquantile range and few quantiles\nIQR(DJI)\n\n[1] 2276.25\n\nquantile(DJI)\n\n      0%      25%      50%      75%     100% \n 6547.10 10063.25 10748.80 12339.50 16576.66 \n\n# skewness and kurtosis skewness and kurtosis functions are not available in R\n# core library but in library e1071 (there are other packages which have\n# functions for skewness and kurtosis try ??kurtosis or search for the function\n# on RSearch.\nlibrary(e1071)\nskewness(DJI)\n\n[1] 0.4777828\n\nkurtosis(DJI)\n\n[1] 0.08404185\n\n\nFungsi summary di R memberikan beberapa ringkasan dasar yaitu, nilai minimum, nilai maksimum, nilai median dan kuartil untuk satu variabel atau dataset. Fungsi summary dapat digunakan sebagai berikut :\n\n# summary of one column/variable in a dataframe\nsummary(DJI)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   6547   10063   10749   11098   12340   16577 \n\n# summary of whole dataset excluding the time column\nsummary(data_stocks[, c(2:21)])\n\n      DJI             AXP             MMM              ATT       \n Min.   : 6547   Min.   :10.26   Min.   : 39.50   Min.   :19.34  \n 1st Qu.:10063   1st Qu.:38.31   1st Qu.: 62.55   1st Qu.:25.54  \n Median :10749   Median :47.49   Median : 77.67   Median :29.65  \n Mean   :11098   Mean   :46.77   Mean   : 75.78   Mean   :31.77  \n 3rd Qu.:12340   3rd Qu.:54.44   3rd Qu.: 85.55   3rd Qu.:37.22  \n Max.   :16577   Max.   :90.73   Max.   :140.25   Max.   :58.50  \n NA's   :27      NA's   :12      NA's   :12       NA's   :12     \n       BA              CAT             CISCO             DD       \n Min.   : 25.06   Min.   : 14.91   Min.   : 8.60   Min.   :16.14  \n 1st Qu.: 44.00   1st Qu.: 28.64   1st Qu.:17.68   1st Qu.:41.13  \n Median : 63.56   Median : 57.10   Median :20.43   Median :44.53  \n Mean   : 62.95   Mean   : 56.01   Mean   :23.41   Mean   :44.37  \n 3rd Qu.: 74.90   3rd Qu.: 79.36   3rd Qu.:24.17   3rd Qu.:48.92  \n Max.   :138.36   Max.   :116.20   Max.   :80.06   Max.   :71.62  \n NA's   :12       NA's   :12       NA's   :13      NA's   :12     \n      XOM               GE              GS              HD       \n Min.   : 30.27   Min.   : 6.66   Min.   : 52.0   Min.   :18.00  \n 1st Qu.: 42.46   1st Qu.:20.00   1st Qu.: 92.2   1st Qu.:31.00  \n Median : 64.77   Median :30.33   Median :116.2   Median :37.37  \n Mean   : 63.20   Mean   :29.56   Mean   :126.9   Mean   :40.20  \n 3rd Qu.: 81.62   3rd Qu.:36.03   3rd Qu.:159.5   3rd Qu.:46.23  \n Max.   :101.51   Max.   :59.94   Max.   :247.9   Max.   :82.34  \n NA's   :12       NA's   :12      NA's   :12      NA's   :12     \n      IBM              INTC            JNJ             JPM       \n Min.   : 55.07   Min.   :12.08   Min.   :33.69   Min.   :15.45  \n 1st Qu.: 87.82   1st Qu.:20.17   1st Qu.:55.27   1st Qu.:35.66  \n Median :106.48   Median :22.76   Median :61.30   Median :40.20  \n Mean   :118.83   Mean   :25.21   Mean   :61.07   Mean   :40.36  \n 3rd Qu.:130.00   3rd Qu.:26.77   3rd Qu.:65.20   3rd Qu.:45.71  \n Max.   :215.80   Max.   :74.88   Max.   :95.63   Max.   :65.70  \n NA's   :12       NA's   :13      NA's   :12      NA's   :12     \n      MRK             MCD              MSFT            NKE       \n Min.   :20.99   Min.   : 12.38   Min.   :15.15   Min.   : 6.64  \n 1st Qu.:34.53   1st Qu.: 29.19   1st Qu.:25.67   1st Qu.:14.56  \n Median :43.63   Median : 43.78   Median :27.59   Median :23.25  \n Mean   :44.65   Mean   : 51.07   Mean   :28.38   Mean   :28.01  \n 3rd Qu.:51.55   3rd Qu.: 70.36   3rd Qu.:30.19   3rd Qu.:36.90  \n Max.   :89.85   Max.   :103.59   Max.   :58.34   Max.   :79.86  \n NA's   :13      NA's   :12       NA's   :13      NA's   :12     \n\n\n\n4.3.1 Example-Descriptive Statistics of Stock Returns\nDalam contoh ini kita akan menggunakan R untuk menghitung statistik deskriptif untuk pengembalian 10 saham dalam file datasets data_fin.csv\n• Pertama-tama kita akan mengimpor dataset ke R menggunakan fungsi read.csv\n\ndata_cs1 = read.csv(\"data/data_fin.csv\")\nhead(data_cs1)  #check the imported data\n\n        Date     DJI   AXP   MMM   ATT    BA   CAT CISCO    DD   XOM    GE\n1  3/01/2000 11357.5 45.82 47.19 47.19 40.12 24.31 54.05 65.00 39.09 49.95\n2  4/01/2000 10997.9 44.09 45.31 44.25 40.12 24.00 51.00 65.00 38.41 48.06\n3  5/01/2000 11122.7 42.96 46.62 44.94 42.62 24.56 51.19 67.75 40.50 47.70\n4  6/01/2000 11253.3 43.78 50.62 43.75 43.06 25.81 50.00 71.50 42.59 48.51\n5  7/01/2000 11522.6 44.42 51.47 44.12 44.12 26.66 52.94 71.62 42.31 50.28\n6 10/01/2000 11572.2 45.04 51.12 44.75 43.69 25.78 54.91 70.00 41.88 50.37\n     GS    HD    IBM  INTC   JNJ   JPM   MRK   MCD  MSFT   NKE\n1 88.31 65.50 115.56 43.47 46.09 48.69 64.04 39.62 58.34 12.03\n2 82.38 61.50 112.06 41.47 44.41 47.27 61.61 38.81 56.31 11.38\n3 78.88 61.44 116.00 41.81 44.88 46.98 64.22 39.44 56.91 12.03\n4 82.25 60.00 114.62 39.38 46.28 47.65 64.75 38.88 55.00 11.97\n5 82.56 62.81 113.31 41.00 47.88 48.52 70.97 39.75 55.72 11.97\n6 84.38 63.19 118.44 42.88 47.03 47.69 68.89 40.06 56.12 12.17\n\n\nTerapkan fungsi ke dengan tanggal sebagai karakter dan kemudian setelah mengubah tanggal ke kelas Tanggal.\n\n# selecting first 10 price series including the data column\ndata_cs1.1 = data_cs1[, c(1:11)]\n# data cleaning-remove NAs\ndata_cs1.1 = na.omit(data_cs1.1)\ncolnames(data_cs1.1)  # see the columns present in the data\n\n [1] \"Date\"  \"DJI\"   \"AXP\"   \"MMM\"   \"ATT\"   \"BA\"    \"CAT\"   \"CISCO\" \"DD\"   \n[10] \"XOM\"   \"GE\"   \n\nsummary(data_cs1.1)  #notice the Date variable\n\n     Date                DJI             AXP             MMM        \n Length:3523        Min.   : 6547   Min.   :10.26   Min.   : 39.50  \n Class :character   1st Qu.:10063   1st Qu.:38.38   1st Qu.: 62.55  \n Mode  :character   Median :10749   Median :47.60   Median : 77.67  \n                    Mean   :11098   Mean   :46.83   Mean   : 75.80  \n                    3rd Qu.:12340   3rd Qu.:54.50   3rd Qu.: 85.61  \n                    Max.   :16577   Max.   :90.73   Max.   :140.25  \n      ATT              BA              CAT             CISCO      \n Min.   :19.34   Min.   : 25.06   Min.   : 14.91   Min.   : 8.60  \n 1st Qu.:25.54   1st Qu.: 44.02   1st Qu.: 28.48   1st Qu.:17.68  \n Median :29.76   Median : 63.61   Median : 57.11   Median :20.39  \n Mean   :31.79   Mean   : 62.99   Mean   : 56.03   Mean   :23.42  \n 3rd Qu.:37.23   3rd Qu.: 74.95   3rd Qu.: 79.50   3rd Qu.:24.18  \n Max.   :58.50   Max.   :138.36   Max.   :116.20   Max.   :80.06  \n       DD             XOM               GE       \n Min.   :16.14   Min.   : 30.27   Min.   : 6.66  \n 1st Qu.:41.17   1st Qu.: 42.41   1st Qu.:20.04  \n Median :44.58   Median : 64.70   Median :30.37  \n Mean   :44.43   Mean   : 63.18   Mean   :29.63  \n 3rd Qu.:48.93   3rd Qu.: 81.70   3rd Qu.:36.05  \n Max.   :71.62   Max.   :101.51   Max.   :59.94  \n\n# check class of dates which will be factor ( treated as factor by default)\\t\nclass(data_cs1.1$Date)\n\n[1] \"character\"\n\n# convert dates to class Date\ndata_cs1.1$Date = as.Date(data_cs1.1$Date, format = \"%d/%m/%Y\")\nclass(data_cs1.1$Date)\n\n[1] \"Date\"\n\nsummary(data_cs1.1)  #notice the Date variable\n\n      Date                 DJI             AXP             MMM        \n Min.   :2000-01-03   Min.   : 6547   Min.   :10.26   Min.   : 39.50  \n 1st Qu.:2003-07-08   1st Qu.:10063   1st Qu.:38.38   1st Qu.: 62.55  \n Median :2007-01-05   Median :10749   Median :47.60   Median : 77.67  \n Mean   :2007-01-03   Mean   :11098   Mean   :46.83   Mean   : 75.80  \n 3rd Qu.:2010-07-06   3rd Qu.:12340   3rd Qu.:54.50   3rd Qu.: 85.61  \n Max.   :2014-01-03   Max.   :16577   Max.   :90.73   Max.   :140.25  \n      ATT              BA              CAT             CISCO      \n Min.   :19.34   Min.   : 25.06   Min.   : 14.91   Min.   : 8.60  \n 1st Qu.:25.54   1st Qu.: 44.02   1st Qu.: 28.48   1st Qu.:17.68  \n Median :29.76   Median : 63.61   Median : 57.11   Median :20.39  \n Mean   :31.79   Mean   : 62.99   Mean   : 56.03   Mean   :23.42  \n 3rd Qu.:37.23   3rd Qu.: 74.95   3rd Qu.: 79.50   3rd Qu.:24.18  \n Max.   :58.50   Max.   :138.36   Max.   :116.20   Max.   :80.06  \n       DD             XOM               GE       \n Min.   :16.14   Min.   : 30.27   Min.   : 6.66  \n 1st Qu.:41.17   1st Qu.: 42.41   1st Qu.:20.04  \n Median :44.58   Median : 64.70   Median :30.37  \n Mean   :44.43   Mean   : 63.18   Mean   :29.63  \n 3rd Qu.:48.93   3rd Qu.: 81.70   3rd Qu.:36.05  \n Max.   :71.62   Max.   :101.51   Max.   :59.94  \n\n\nUbah harga menjadi pengembalian\n\nd2 = as.data.frame(sapply(data_cs1.1[2:11], function(x) diff(log(x)) * 100))  #note it will be one less\n# create a different dataframe with returns\ndata_stocks_ret = as.data.frame(cbind(Date = data_cs1.1$Date[2:length(data_cs1.1$Date)],\n    d2), stringsAsFactors = FALSE, row.names = NULL)\n# visual inspection\nhead(data_stocks_ret)\n\n        Date        DJI        AXP        MMM        ATT         BA       CAT\n1 2000-01-04 -3.2173973 -3.8487678 -4.0654247 -6.4326634  0.0000000 -1.283396\n2 2000-01-05  1.1283720 -2.5963549  2.8501875  1.5472895  6.0448664  2.306527\n3 2000-01-06  1.1673354  1.8907642  8.2317122 -2.6836654  1.0270865  4.964291\n4 2000-01-07  2.3648905  1.4512726  1.6652359  0.8421582  2.4318702  3.240230\n5 2000-01-10  0.4295346  1.3861165 -0.6823304  1.4178250 -0.9793951 -3.356532\n6 2000-01-11 -0.5293883  0.9061837 -1.7165263 -1.4178250 -1.8713726 -1.563754\n       CISCO         DD        XOM         GE\n1 -5.8083911  0.0000000 -1.7548837 -3.8572275\n2  0.3718568  4.1437190  5.2984132 -0.7518832\n3 -2.3521195  5.3872990  5.0317510  1.6838564\n4  5.7136191  0.1676915 -0.6596019  3.5837421\n5  3.6536284 -2.2879123 -1.0215079  0.1788376\n6 -3.0697677 -1.8018506  1.1868167  0.2379537\n\n\n\n4.3.1.1 Using the Describe function\nPaket psych dilengkapi dengan fungsi yang disebut describe yang menghasilkan statistik deskriptif untuk semua vektor data (kolom) dalam bingkai data, matriks atau vektor.\n\nlibrary(psych)  #load the required package\nargs(describe)  #arguments for describe function\n\nfunction (x, na.rm = TRUE, interp = FALSE, skew = TRUE, ranges = TRUE, \n    trim = 0.1, type = 3, check = TRUE, fast = NULL, quant = NULL, \n    IQR = FALSE, omit = FALSE, data = NULL) \nNULL\n\n# use describe to calculate descriptive stats for data_cs1.1r\ndesc1 = describe(data_stocks_ret[, 2:11])  #note we dont pass the date column\n# check the output\nhead(desc1)\n\n    vars    n  mean   sd median trimmed  mad    min   max range  skew kurtosis\nDJI    1 3522  0.01 1.23   0.04    0.03 0.82  -8.20 10.51 18.71 -0.06     7.71\nAXP    2 3522  0.02 2.89   0.02    0.03 1.55 -19.35 18.77 38.12 -0.01     9.14\nMMM    3 3522  0.03 1.55   0.03    0.03 1.10  -9.38 10.39 19.78  0.06     4.87\nATT    4 3522 -0.01 1.80   0.03    0.01 1.22 -13.54 15.08 28.62  0.02     6.26\nBA     5 3522  0.03 2.01   0.05    0.06 1.57 -19.39 14.38 33.77 -0.26     5.39\nCAT    6 3522  0.04 2.14   0.04    0.05 1.65 -15.69 13.73 29.42 -0.08     4.08\n      se\nDJI 0.02\nAXP 0.05\nMMM 0.03\nATT 0.03\nBA  0.03\nCAT 0.04\n\n# the above output is in long format, we can transpose it get column format\ndesc1.t = t(desc1)\nhead(desc1.t)\n\n                 DJI          AXP          MMM           ATT           BA\nvars    1.000000e+00 2.000000e+00 3.000000e+00  4.000000e+00 5.000000e+00\nn       3.522000e+03 3.522000e+03 3.522000e+03  3.522000e+03 3.522000e+03\nmean    1.055257e-02 1.908563e-02 3.056011e-02 -8.647491e-03 3.499777e-02\nsd      1.226702e+00 2.892586e+00 1.551706e+00  1.799180e+00 2.013123e+00\nmedian  4.442671e-02 1.723604e-02 3.233787e-02  3.018428e-02 5.279680e-02\ntrimmed 2.597511e-02 3.152635e-02 3.241946e-02  9.134423e-03 5.567097e-02\n                 CAT         CISCO            DD          XOM            GE\nvars    6.000000e+00  7.000000e+00  8.000000e+00 9.000000e+00  1.000000e+01\nn       3.522000e+03  3.522000e+03  3.522000e+03 3.522000e+03  3.522000e+03\nmean    3.710732e-02 -2.554732e-02 -5.379787e-04 2.653014e-02 -1.696661e-02\nsd      2.143040e+00  2.744068e+00  1.881993e+00 1.629181e+00  2.057353e+00\nmedian  4.291300e-02  3.800312e-02  0.000000e+00 5.437650e-02  0.000000e+00\ntrimmed 4.678016e-02 -1.339579e-04  1.469270e-03 4.883990e-02  9.841473e-05\n\n\nStatistik deskriptif yang dihasilkan di atas memberikan mean, median, standar deviasi, trimmed mean (dipangkas), median, mad (median absolut deviasi dari median), minimum (min), maksimum (max), skewness (miring), kurtosis dan kesalahan standar (se).\nIni dapat dengan mudah ditransfer ke file CSV atau file teks. Satu baris kode berikut mentransfer statistik deskriptif ke file CSV yang kemudian dapat diimpor ke file word atau lateks sesuai kebutuhan.\n\nrequire(pastecs)  # note library and require can both be used to include a package\n# detach the package pastecs its useful to avoid any conflicts (e.g psych and\n# Hmisc have 'describe' function with two different behaviours\ndetach(\"package:psych\", unload = TRUE)\n# use stat.desc in with default arguments\ndesc2 = stat.desc(data_stocks_ret[, 2:11], norm = TRUE)\ndesc2  #note skewness/kurtosis\n\n                       DJI           AXP           MMM           ATT\nnbr.val       3.522000e+03  3.522000e+03  3.522000e+03  3.522000e+03\nnbr.null      2.000000e+00  2.400000e+01  3.000000e+01  5.000000e+01\nnbr.na        0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00\nmin          -8.200737e+00 -1.935233e+01 -9.383688e+00 -1.353821e+01\nmax           1.050812e+01  1.877116e+01  1.039309e+01  1.508318e+01\nrange         1.870886e+01  3.812349e+01  1.977678e+01  2.862139e+01\nsum           3.716616e+01  6.721959e+01  1.076327e+02 -3.045646e+01\nmedian        4.442671e-02  1.723604e-02  3.233787e-02  3.018428e-02\nmean          1.055257e-02  1.908563e-02  3.056011e-02 -8.647491e-03\nSE.mean       2.067018e-02  4.874068e-02  2.614656e-02  3.031656e-02\nCI.mean.0.95  4.052675e-02  9.556282e-02  5.126395e-02  5.943979e-02\nvar           1.504798e+00  8.367052e+00  2.407790e+00  3.237048e+00\nstd.dev       1.226702e+00  2.892586e+00  1.551706e+00  1.799180e+00\ncoef.var      1.162467e+02  1.515583e+02  5.077551e+01 -2.080580e+02\nskewness     -5.829983e-02 -6.689750e-03  5.927112e-02  1.620418e-02\nskew.2SE     -7.065472e-01 -8.107441e-02  7.183185e-01  1.963817e-01\nkurtosis      7.714304e+00  9.141053e+00  4.865294e+00  6.257155e+00\nkurt.2SE      4.675883e+01  5.540681e+01  2.949008e+01  3.792659e+01\nnormtest.W    9.187712e-01  8.496717e-01  9.384591e-01  9.298653e-01\nnormtest.p    5.671566e-40  1.020339e-49  6.131053e-36  8.237017e-38\n                        BA           CAT         CISCO            DD\nnbr.val       3.522000e+03  3.522000e+03  3.522000e+03  3.522000e+03\nnbr.null      1.500000e+01  2.400000e+01  5.000000e+01  2.900000e+01\nnbr.na        0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00\nmin          -1.938931e+01 -1.568589e+01 -1.768649e+01 -1.202802e+01\nmax           1.437774e+01  1.373497e+01  2.182386e+01  1.085590e+01\nrange         3.376704e+01  2.942086e+01  3.951034e+01  2.288392e+01\nsum           1.232621e+02  1.306920e+02 -8.997766e+01 -1.894761e+00\nmedian        5.279680e-02  4.291300e-02  3.800312e-02  0.000000e+00\nmean          3.499777e-02  3.710732e-02 -2.554732e-02 -5.379787e-04\nSE.mean       3.392155e-02  3.611067e-02  4.623812e-02  3.171197e-02\nCI.mean.0.95  6.650788e-02  7.079996e-02  9.065621e-02  6.217570e-02\nvar           4.052665e+00  4.592620e+00  7.529907e+00  3.541897e+00\nstd.dev       2.013123e+00  2.143040e+00  2.744068e+00  1.881993e+00\ncoef.var      5.752148e+01  5.775248e+01 -1.074112e+02 -3.498266e+03\nskewness     -2.605203e-01 -8.369997e-02  1.547891e-01 -1.523353e-01\nskew.2SE     -3.157298e+00 -1.014377e+00  1.875920e+00 -1.846181e+00\nkurtosis      5.392404e+00  4.077013e+00  7.329406e+00  5.061290e+00\nkurt.2SE      3.268507e+01  2.471206e+01  4.442585e+01  3.067808e+01\nnormtest.W    9.550329e-01  9.583075e-01  9.104004e-01  9.381393e-01\nnormtest.p    1.196739e-31  1.172506e-30  1.882675e-41  5.179385e-36\n                       XOM            GE\nnbr.val       3.522000e+03  3.522000e+03\nnbr.null      2.900000e+01  6.300000e+01\nnbr.na        0.000000e+00  0.000000e+00\nmin          -1.502710e+01 -1.368410e+01\nmax           1.586307e+01  1.798444e+01\nrange         3.089017e+01  3.166854e+01\nsum           9.343915e+01 -5.975640e+01\nmedian        5.437650e-02  0.000000e+00\nmean          2.653014e-02 -1.696661e-02\nSE.mean       2.745205e-02  3.466683e-02\nCI.mean.0.95  5.382353e-02  6.796911e-02\nvar           2.654232e+00  4.232702e+00\nstd.dev       1.629181e+00  2.057353e+00\ncoef.var      6.140870e+01 -1.212589e+02\nskewness      4.651513e-02  1.102593e-02\nskew.2SE      5.637262e-01  1.336254e-01\nkurtosis      1.043194e+01  7.781017e+00\nkurt.2SE      6.323129e+01  4.716320e+01\nnormtest.W    9.160764e-01  9.046828e-01\nnormtest.p    1.839459e-40  2.126284e-42"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "index.html#apa-yang-akan-anda-pelajari",
    "href": "index.html#apa-yang-akan-anda-pelajari",
    "title": "Topik 1 Pengenalan",
    "section": "1.1 Apa yang akan Anda pelajari",
    "text": "1.1 Apa yang akan Anda pelajari\nIlmu data adalah bidang yang luas, dan tidak mungkin Anda bisa menguasai semuanya dengan membaca satu buku. Buku ini bertujuan untuk memberi Anda dasar yang kuat dalam alat yang paling penting dan pengetahuan yang cukup untuk menemukan sumber daya untuk belajar lebih banyak bila diperlukan. Model langkah-langkah proyek ilmu data tipikal kami terlihat seperti Gambar 1.1\n\n\n\n\n\n\n\n\n\n\n4.1.1 Extracting Data\nAnda dapat menginstal tidyverse lengkap dengan satu baris kode :\n\ninstall.packages(\"tidyverse\")\n\nDi komputer Anda, ketik baris kode tersebut di konsol, lalu tekan enter untuk menjalankannya. R akan mengunduh paket dari CRAN dan menginstalnya di komputer Anda.\nAnda tidak akan dapat menggunakan fungsi, objek, atau file bantuan dalam paket sampai Anda memuatnya dengan library() file . Setelah Anda menginstal paket, Anda dapat memuatnya menggunakan library() fungsi:\n\nlibrary(tidyverse)\n#&gt; ── Attaching core tidyverse packages ───────────────────── tidyverse 2.0.0 ──\n#&gt; ✔ dplyr     1.1.3     ✔ readr     2.1.4\n#&gt; ✔ forcats   1.0.0     ✔ stringr   1.5.0\n#&gt; ✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n#&gt; ✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n#&gt; ✔ purrr     1.0.2     \n#&gt; ── Conflicts ─────────────────────────────────────── tidyverse_conflicts() ──\n#&gt; ✖ dplyr::filter() masks stats::filter()\n#&gt; ✖ dplyr::lag()    masks stats::lag()\n#&gt; ℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nIni memberitahu Anda bahwa tidyverse memuat sembilan paket: dplyr, forcats, ggplot2, lubridate, purrr, readr, stringr, tibble, tidyr. Ini dianggap sebagai inti dari tidyverse karena Anda akan menggunakannya di hampir setiap analisis.\nPaket dalam tidyverse cukup sering berubah. Anda dapat melihat apakah pembaruan tersedia dengan menjalankan tidyverse_update() .\n\n\n1.1.2 Extracting Data\nKami akan menggunakan banyak paket dari luar tidyverse dalam buku ini. Misalnya, kita akan menggunakan paket berikut karena mereka menyediakan kumpulan data yang menarik untuk kita kerjakan dalam proses pembelajaran R:\n\ninstall.packages(\n  c(\"arrow\", \"babynames\", \"curl\", \"duckdb\", \"gapminder\", \n    \"ggrepel\", \"ggridges\", \"ggthemes\", \"hexbin\", \"janitor\", \"Lahman\", \n    \"leaflet\", \"maps\", \"nycflights13\", \"openxlsx\", \"palmerpenguins\", \n    \"repurrrsive\", \"tidymodels\", \"writexl\")\n  )\n\nKami juga akan menggunakan pilihan paket lain untuk satu contoh. Anda tidak perlu menginstalnya sekarang, ingatlah bahwa setiap kali Anda melihat kesalahan seperti ini:\n\nlibrary(ggrepel)\n#&gt; Error in library(ggrepel) : there is no package called ‘ggrepel’\n\nAnda perlu menjalankan install.packages(“ggrepel”) untuk menginstal paket."
  },
  {
    "objectID": "index.html#menjalankan-kode-r",
    "href": "index.html#menjalankan-kode-r",
    "title": "Topik 1 Pengenalan",
    "section": "1.2 Menjalankan kode R",
    "text": "1.2 Menjalankan kode R\nBagian sebelumnya menunjukkan kepada Anda beberapa contoh menjalankan kode R. Kode dalam buku terlihat seperti ini:\n\n1 + 2\n\n[1] 3\n\n\nJika Anda menjalankan kode yang sama di konsol lokal Anda, akan terlihat seperti ini:\n&gt; 1 + 2 \n[1] 3\nAda dua perbedaan utama. Di konsol Anda, Anda mengetik setelah &gt; , disebut prompt; Kami tidak menampilkan perintah dalam buku. Dalam buku ini, output dikomentari dengan #&gt; ; di konsol Anda, itu muncul langsung setelah kode Anda. Kedua perbedaan ini berarti bahwa jika Anda bekerja dengan versi elektronik buku, Anda dapat dengan mudah menyalin kode dari buku dan menempelkannya ke konsol."
  },
  {
    "objectID": "materi2.html",
    "href": "materi2.html",
    "title": "Topik 2 Visualisasi",
    "section": "",
    "text": "Bab ini berfokus pada ggplot2, salah satu paket inti dalam tidyverse. Untuk mengakses himpunan data, halaman bantuan, dan fungsi yang digunakan dalam bab ini, muat tidyverse dengan menjalankan:"
  },
  {
    "objectID": "materi2.html#apa-yang-akan-anda-pelajari",
    "href": "materi2.html#apa-yang-akan-anda-pelajari",
    "title": "Topik 2 Visualisasi",
    "section": "1.1 Apa yang akan Anda pelajari",
    "text": "1.1 Apa yang akan Anda pelajari\nIlmu data adalah bidang yang luas, dan tidak mungkin Anda bisa menguasai semuanya dengan membaca satu buku. Buku ini bertujuan untuk memberi Anda dasar yang kuat dalam alat yang paling penting dan pengetahuan yang cukup untuk menemukan sumber daya untuk belajar lebih banyak bila diperlukan. Model langkah-langkah proyek ilmu data tipikal kami terlihat seperti Gambar 1.1\n\nlibrary(tidyverse)\n#&gt; ── Attaching core tidyverse packages ───────────────────── tidyverse 2.0.0 ──\n#&gt; ✔ dplyr     1.1.3     ✔ readr     2.1.4\n#&gt; ✔ forcats   1.0.0     ✔ stringr   1.5.0\n#&gt; ✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n#&gt; ✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n#&gt; ✔ purrr     1.0.2     \n#&gt; ── Conflicts ─────────────────────────────────────── tidyverse_conflicts() ──\n#&gt; ✖ dplyr::filter() masks stats::filter()\n#&gt; ✖ dplyr::lag()    masks stats::lag()\n#&gt; ℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n4.1.1 Extracting Data\nAnda dapat menginstal tidyverse lengkap dengan satu baris kode :\n\ninstall.packages(\"tidyverse\")\nlibrary(tidyverse)\n\n\nlibrary(palmerpenguins)\nlibrary(ggthemes)\n\n\npenguins\n\n# A tibble: 344 × 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   &lt;fct&gt;   &lt;fct&gt;              &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;\n 1 Adelie  Torgersen           39.1          18.7               181        3750\n 2 Adelie  Torgersen           39.5          17.4               186        3800\n 3 Adelie  Torgersen           40.3          18                 195        3250\n 4 Adelie  Torgersen           NA            NA                  NA          NA\n 5 Adelie  Torgersen           36.7          19.3               193        3450\n 6 Adelie  Torgersen           39.3          20.6               190        3650\n 7 Adelie  Torgersen           38.9          17.8               181        3625\n 8 Adelie  Torgersen           39.2          19.6               195        4675\n 9 Adelie  Torgersen           34.1          18.1               193        3475\n10 Adelie  Torgersen           42            20.2               190        4250\n# ℹ 334 more rows\n# ℹ 2 more variables: sex &lt;fct&gt;, year &lt;int&gt;\n\n#&gt; # A tibble: 344 × 8\n#&gt;   species island    bill_length_mm bill_depth_mm flipper_length_mm\n#&gt;   &lt;fct&gt;   &lt;fct&gt;              &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;\n#&gt; 1 Adelie  Torgersen           39.1          18.7               181\n#&gt; 2 Adelie  Torgersen           39.5          17.4               186\n#&gt; 3 Adelie  Torgersen           40.3          18                 195\n#&gt; 4 Adelie  Torgersen           NA            NA                  NA\n#&gt; 5 Adelie  Torgersen           36.7          19.3               193\n#&gt; 6 Adelie  Torgersen           39.3          20.6               190\n#&gt; # ℹ 338 more rows\n#&gt; # ℹ 3 more variables: body_mass_g &lt;int&gt;, sex &lt;fct&gt;, year &lt;int&gt;\n\n\nglimpse(penguins)\n\nRows: 344\nColumns: 8\n$ species           &lt;fct&gt; Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            &lt;fct&gt; Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm &lt;int&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       &lt;int&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               &lt;fct&gt; male, female, female, NA, female, male, female, male…\n$ year              &lt;int&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n#&gt; Rows: 344\n#&gt; Columns: 8\n#&gt; $ species           &lt;fct&gt; Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, A…\n#&gt; $ island            &lt;fct&gt; Torgersen, Torgersen, Torgersen, Torgersen, Torge…\n#&gt; $ bill_length_mm    &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.…\n#&gt; $ bill_depth_mm     &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.…\n#&gt; $ flipper_length_mm &lt;int&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, …\n#&gt; $ body_mass_g       &lt;int&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 347…\n#&gt; $ sex               &lt;fct&gt; male, female, female, NA, female, male, female, m…\n#&gt; $ year              &lt;int&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2…\n\n\nggplot(data = penguins)\n\n\n\n\n\nggplot(\n  data = penguins,\n  mapping = aes(x = flipper_length_mm, y = body_mass_g)\n)\n\n\n\n\n\nggplot(\n  data = penguins,\n  mapping = aes(x = flipper_length_mm, y = body_mass_g)\n) +\n  geom_point()\n\n\n\n#&gt; Warning: Removed 2 rows containing missing values (`geom_point()`).\n\n\nggplot(\n  data = penguins,\n  mapping = aes(x = flipper_length_mm, y = body_mass_g, color = species)\n) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n\n\n\n\n\nggplot(\n  data = penguins,\n  mapping = aes(x = flipper_length_mm, y = body_mass_g)\n) +\n  geom_point(mapping = aes(color = species, shape = species)) +\n  geom_smooth(method = \"lm\")\n\n\n\n\n\nggplot(\n  data = penguins,\n  mapping = aes(x = flipper_length_mm, y = body_mass_g)\n) +\n  geom_point(aes(color = species, shape = species)) +\n  geom_smooth(method = \"lm\") +\n  labs(\n    title = \"Body mass and flipper length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Flipper length (mm)\", y = \"Body mass (g)\",\n    color = \"Species\", shape = \"Species\"\n  ) +\n  scale_color_colorblind()"
  },
  {
    "objectID": "index.html#prasyarat",
    "href": "index.html#prasyarat",
    "title": "Topik 1 Data Import",
    "section": "1.1 Prasyarat",
    "text": "1.1 Prasyarat\nMemuat file di R dengan package readr, yang merupakan bagian dari tidyverse inti.\n\nlibrary(tidyverse)"
  },
  {
    "objectID": "index.html#membaca-data-dari-file",
    "href": "index.html#membaca-data-dari-file",
    "title": "Topik 1 Data Import",
    "section": "1.2 Membaca data dari File",
    "text": "1.2 Membaca data dari File\n\nMembaca spreadsheet Excel\nSemua fungsi ini memiliki sintaks yang sama seperti fungsi lain yang telah kami perkenalkan sebelumnya untuk membaca jenis file lain, misalnya, , , read_csv() read_table() dll. kali ini kita akan menggunakan read_excel() .\n\nstudents &lt;- read_excel(\"data/students.xlsx\")\n#&gt; membaca file student.xlsx dari lokasi folder data\nstudents\n\n# A tibble: 6 × 5\n  `Student ID` `Full Name`      favourite.food     mealPlan            AGE  \n         &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;              &lt;chr&gt;               &lt;chr&gt;\n1            1 Sunil Huffmann   Strawberry yoghurt Lunch only          4    \n2            2 Barclay Lynn     French fries       Lunch only          5    \n3            3 Jayendra Lyne    N/A                Breakfast and lunch 7    \n4            4 Leon Rossini     Anchovies          Lunch only          &lt;NA&gt; \n5            5 Chidiegwu Dunkel Pizza              Breakfast and lunch five \n6            6 Güvenç Attila    Ice cream          Lunch only          6    \n\n\nNama kolom tidak teratur,lalu kita ubah dengan fungsi col_names\n\n#&gt; mengubah nama kolom\nread_excel(\n  \"data/students.xlsx\",\n  col_names = c(\"student_id\", \"full_name\", \"favourite_food\", \"meal_plan\", \"age\"),\n  skip = 1\n)\n\n# A tibble: 6 × 5\n  student_id full_name        favourite_food     meal_plan           age  \n       &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;              &lt;chr&gt;               &lt;chr&gt;\n1          1 Sunil Huffmann   Strawberry yoghurt Lunch only          4    \n2          2 Barclay Lynn     French fries       Lunch only          5    \n3          3 Jayendra Lyne    N/A                Breakfast and lunch 7    \n4          4 Leon Rossini     Anchovies          Lunch only          &lt;NA&gt; \n5          5 Chidiegwu Dunkel Pizza              Breakfast and lunch five \n6          6 Güvenç Attila    Ice cream          Lunch only          6    \n\n\nterlihat pada kolom age dengan tipe data yang seharusnya numeric terdapat data string/huruf (five) sehingga kita ubah menjadi numeric (5)\n\nstudents &lt;- read_excel(\n  \"data/students.xlsx\",\n  col_names = c(\"student_id\", \"full_name\", \"favourite_food\", \"meal_plan\", \"age\"),\n  skip = 1,\n  na = c(\"\", \"N/A\"),\n  col_types = c(\"numeric\", \"text\", \"text\", \"text\", \"text\")\n)\n#&gt; Fungsi col_types mengubah type data\n\nstudents &lt;- students |&gt;\n  mutate(\n    age = if_else(age == \"five\", \"5\", age),\n    age = parse_number(age)\n  )\n#&gt; Fungsi mutate mengubah data dengan argumen if \n\nstudents\n\n# A tibble: 6 × 5\n  student_id full_name        favourite_food     meal_plan             age\n       &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;              &lt;chr&gt;               &lt;dbl&gt;\n1          1 Sunil Huffmann   Strawberry yoghurt Lunch only              4\n2          2 Barclay Lynn     French fries       Lunch only              5\n3          3 Jayendra Lyne    &lt;NA&gt;               Breakfast and lunch     7\n4          4 Leon Rossini     Anchovies          Lunch only             NA\n5          5 Chidiegwu Dunkel Pizza              Breakfast and lunch     5\n6          6 Güvenç Attila    Ice cream          Lunch only              6"
  },
  {
    "objectID": "index.html#membaca-data-dari-banyak-file",
    "href": "index.html#membaca-data-dari-banyak-file",
    "title": "Topik 1 Data Import",
    "section": "1.3 Membaca data dari banyak file",
    "text": "1.3 Membaca data dari banyak file\nTerkadang data dibagi menjadi beberapa file, bukan dalam satu file. Misalnya, kita mungkin memiliki data penjualan selama beberapa bulan, dengan data setiap bulan dalam file terpisah: 01-sales.csv untuk Januari, Februari, 02-sales.csv dan 03-sales.csv Maret. Dengan read_csv() kita dapat membaca data ini sekaligus dan menumpuknya di atas satu sama lain dalam satu data frame.\n\nsales_files &lt;- c(\"data/01-sales.csv\", \"data/02-sales.csv\", \"data/03-sales.csv\")\nread_csv(sales_files, id = \"file\")\n\n# A tibble: 19 × 6\n   file              month     year brand  item     n\n   &lt;chr&gt;             &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 data/01-sales.csv January   2019     1  1234     3\n 2 data/01-sales.csv January   2019     1  8721     9\n 3 data/01-sales.csv January   2019     1  1822     2\n 4 data/01-sales.csv January   2019     2  3333     1\n 5 data/01-sales.csv January   2019     2  2156     9\n 6 data/01-sales.csv January   2019     2  3987     6\n 7 data/01-sales.csv January   2019     2  3827     6\n 8 data/02-sales.csv February  2019     1  1234     8\n 9 data/02-sales.csv February  2019     1  8721     2\n10 data/02-sales.csv February  2019     1  1822     3\n11 data/02-sales.csv February  2019     2  3333     1\n12 data/02-sales.csv February  2019     2  2156     3\n13 data/02-sales.csv February  2019     2  3987     6\n14 data/03-sales.csv March     2019     1  1234     3\n15 data/03-sales.csv March     2019     1  3627     1\n16 data/03-sales.csv March     2019     1  8820     3\n17 data/03-sales.csv March     2019     2  7253     1\n18 data/03-sales.csv March     2019     2  8766     3\n19 data/03-sales.csv March     2019     2  8288     6\n\n#&gt; # A tibble: 19 × 6\n#&gt;   file              month    year brand  item     n\n#&gt;   &lt;chr&gt;             &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n#&gt; 1 data/01-sales.csv January  2019     1  1234     3\n#&gt; 2 data/01-sales.csv January  2019     1  8721     9\n#&gt; 3 data/01-sales.csv January  2019     1  1822     2\n#&gt; 4 data/01-sales.csv January  2019     2  3333     1\n#&gt; 5 data/01-sales.csv January  2019     2  2156     9\n#&gt; 6 data/01-sales.csv January  2019     2  3987     6\n#&gt; # ℹ 13 more rows\n\nAtau bisa mengunduh file-file data dari https://pos.it/r4ds-01-sales, https://pos.it/r4ds-02-sales, dan https://pos.it/r4ds-03-sales dengan kode :\n\nsales_files &lt;- c(\n  \"https://pos.it/r4ds-01-sales\",\n  \"https://pos.it/r4ds-02-sales\",\n  \"https://pos.it/r4ds-03-sales\"\n)\nread_csv(sales_files, id = \"file\")\n\n# A tibble: 19 × 6\n   file                         month     year brand  item     n\n   &lt;chr&gt;                        &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 https://pos.it/r4ds-01-sales January   2019     1  1234     3\n 2 https://pos.it/r4ds-01-sales January   2019     1  8721     9\n 3 https://pos.it/r4ds-01-sales January   2019     1  1822     2\n 4 https://pos.it/r4ds-01-sales January   2019     2  3333     1\n 5 https://pos.it/r4ds-01-sales January   2019     2  2156     9\n 6 https://pos.it/r4ds-01-sales January   2019     2  3987     6\n 7 https://pos.it/r4ds-01-sales January   2019     2  3827     6\n 8 https://pos.it/r4ds-02-sales February  2019     1  1234     8\n 9 https://pos.it/r4ds-02-sales February  2019     1  8721     2\n10 https://pos.it/r4ds-02-sales February  2019     1  1822     3\n11 https://pos.it/r4ds-02-sales February  2019     2  3333     1\n12 https://pos.it/r4ds-02-sales February  2019     2  2156     3\n13 https://pos.it/r4ds-02-sales February  2019     2  3987     6\n14 https://pos.it/r4ds-03-sales March     2019     1  1234     3\n15 https://pos.it/r4ds-03-sales March     2019     1  3627     1\n16 https://pos.it/r4ds-03-sales March     2019     1  8820     3\n17 https://pos.it/r4ds-03-sales March     2019     2  7253     1\n18 https://pos.it/r4ds-03-sales March     2019     2  8766     3\n19 https://pos.it/r4ds-03-sales March     2019     2  8288     6\n\n\nJika kita memiliki banyak file mungkin rumit untuk menuliskan nama mereka dalam daftar. Sebagai gantinya, kita dapat menggunakan fungsi base list.files() untuk menemukan file dengan mencocokkan pola dalam nama file.\n\nsales_files &lt;- list.files(\"data\", pattern = \"sales\\\\.csv$\", full.names = TRUE)\nsales_files\n\n[1] \"data/01-sales.csv\" \"data/02-sales.csv\" \"data/03-sales.csv\"\n\n#&gt; [1] \"data/01-sales.csv\" \"data/02-sales.csv\" \"data/03-sales.csv\""
  },
  {
    "objectID": "index.html#write-to-file",
    "href": "index.html#write-to-file",
    "title": "Topik 1 Data Import",
    "section": "1.4 Write to File",
    "text": "1.4 Write to File\nReadr juga dilengkapi dengan dua fungsi yang berguna untuk write data kembali ke disk: write_csv() dan write_tsv() . Argumen yang paling penting untuk fungsi-fungsi ini adalah x (frame data untuk menyimpan) dan file (lokasi untuk menyimpannya). kita juga dapat menentukan bagaimana nilai yang hilang ditulis dengan N/A.\n\nwrite_csv(students, \"students.csv\")\n\nSekarang mari kita read kembali file csv, Perhatikan bahwa informasi jenis variabel yang baru saja kita siapkan hilang saat kita menyimpan ke CSV karena memulai dari awal dengan membaca dari file teks biasa lagi:\n\nstudents\n\n# A tibble: 6 × 5\n  student_id full_name        favourite_food     meal_plan             age\n       &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;              &lt;chr&gt;               &lt;dbl&gt;\n1          1 Sunil Huffmann   Strawberry yoghurt Lunch only              4\n2          2 Barclay Lynn     French fries       Lunch only              5\n3          3 Jayendra Lyne    &lt;NA&gt;               Breakfast and lunch     7\n4          4 Leon Rossini     Anchovies          Lunch only             NA\n5          5 Chidiegwu Dunkel Pizza              Breakfast and lunch     5\n6          6 Güvenç Attila    Ice cream          Lunch only              6\n\nwrite_csv(students, \"students-2.csv\")\nread_csv(\"students-2.csv\")\n\n# A tibble: 6 × 5\n  student_id full_name        favourite_food     meal_plan             age\n       &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;              &lt;chr&gt;               &lt;dbl&gt;\n1          1 Sunil Huffmann   Strawberry yoghurt Lunch only              4\n2          2 Barclay Lynn     French fries       Lunch only              5\n3          3 Jayendra Lyne    &lt;NA&gt;               Breakfast and lunch     7\n4          4 Leon Rossini     Anchovies          Lunch only             NA\n5          5 Chidiegwu Dunkel Pizza              Breakfast and lunch     5\n6          6 Güvenç Attila    Ice cream          Lunch only              6"
  },
  {
    "objectID": "index.html#library",
    "href": "index.html#library",
    "title": "Topik 1 Data Import",
    "section": "1.1 Library",
    "text": "1.1 Library\n\nLibrary Spreadsheet Excel\nDi bagian ini, kita akan mempelajari cara memuat data dari spreadsheet Excel di R dengan package readxl. Package ini adalah tidyverse non-core, jadi kita perlu memuatnya secara eksplisit, tetapi diinstal secara otomatis ketika menginstal paket tidyverse. Kemudian, kita juga akan menggunakan package writexl, yang memungkinkan kita untuk membuat spreadsheet Excel.\n\nlibrary(readxl)\nlibrary(tidyverse)\nlibrary(writexl)"
  },
  {
    "objectID": "index.html#data-spreadsheet-excel",
    "href": "index.html#data-spreadsheet-excel",
    "title": "Topik 1 Data Import",
    "section": "1. Data Spreadsheet Excel",
    "text": "1. Data Spreadsheet Excel\n\n1.1 Library Spreadsheet Excel\nDi bagian ini, kita akan mempelajari cara memuat data dari spreadsheet Excel di R dengan package readxl. Package ini adalah tidyverse non-core, jadi kita perlu memuatnya secara eksplisit, tetapi diinstal secara otomatis ketika menginstal paket tidyverse. Kemudian, kita juga akan menggunakan package writexl, yang memungkinkan kita untuk membuat spreadsheet Excel.\n\nlibrary(readxl)\nlibrary(tidyverse)\nlibrary(writexl)\n\n\n\n1.2 Membaca spreadsheet Excel\nSemua fungsi ini memiliki sintaks yang sama seperti fungsi lain yang telah kami perkenalkan sebelumnya untuk membaca jenis file lain, misalnya, , , read_csv() read_table() dll. kali ini kita akan menggunakan read_excel() .\n\n#&gt; membaca file student.xlsx dari lokasi folder data\nstudents &lt;- read_excel(\"data/students.xlsx\")\n\nstudents\n\n# A tibble: 6 × 5\n  `Student ID` `Full Name`      favourite.food     mealPlan            AGE  \n         &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;              &lt;chr&gt;               &lt;chr&gt;\n1            1 Sunil Huffmann   Strawberry yoghurt Lunch only          4    \n2            2 Barclay Lynn     French fries       Lunch only          5    \n3            3 Jayendra Lyne    N/A                Breakfast and lunch 7    \n4            4 Leon Rossini     Anchovies          Lunch only          &lt;NA&gt; \n5            5 Chidiegwu Dunkel Pizza              Breakfast and lunch five \n6            6 Güvenç Attila    Ice cream          Lunch only          6    \n\n\nNama kolom tidak teratur,lalu kita ubah dengan fungsi col_names\n\n#&gt; mengubah nama kolom\nread_excel(\n  \"data/students.xlsx\",\n  col_names = c(\"student_id\", \"full_name\", \"favourite_food\", \"meal_plan\", \"age\"),\n  skip = 1\n)\n\n# A tibble: 6 × 5\n  student_id full_name        favourite_food     meal_plan           age  \n       &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;              &lt;chr&gt;               &lt;chr&gt;\n1          1 Sunil Huffmann   Strawberry yoghurt Lunch only          4    \n2          2 Barclay Lynn     French fries       Lunch only          5    \n3          3 Jayendra Lyne    N/A                Breakfast and lunch 7    \n4          4 Leon Rossini     Anchovies          Lunch only          &lt;NA&gt; \n5          5 Chidiegwu Dunkel Pizza              Breakfast and lunch five \n6          6 Güvenç Attila    Ice cream          Lunch only          6    \n\n\nterlihat pada kolom age dengan tipe data yang seharusnya numeric terdapat data string/huruf (five) sehingga kita ubah menjadi numeric (5)\n\nstudents &lt;- read_excel(\n  \"data/students.xlsx\",\n  col_names = c(\"student_id\", \"full_name\", \"favourite_food\", \"meal_plan\", \"age\"),\n  skip = 1,\n  na = c(\"\", \"N/A\"),\n  col_types = c(\"numeric\", \"text\", \"text\", \"text\", \"text\")\n)\n#&gt; Fungsi col_types mengubah type data\n\nstudents &lt;- students |&gt;\n  mutate(\n    age = if_else(age == \"five\", \"5\", age),\n    age = parse_number(age)\n  )\n#&gt; Fungsi mutate mengubah data dengan argumen if \n\nstudents\n\n# A tibble: 6 × 5\n  student_id full_name        favourite_food     meal_plan             age\n       &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;              &lt;chr&gt;               &lt;dbl&gt;\n1          1 Sunil Huffmann   Strawberry yoghurt Lunch only              4\n2          2 Barclay Lynn     French fries       Lunch only              5\n3          3 Jayendra Lyne    &lt;NA&gt;               Breakfast and lunch     7\n4          4 Leon Rossini     Anchovies          Lunch only             NA\n5          5 Chidiegwu Dunkel Pizza              Breakfast and lunch     5\n6          6 Güvenç Attila    Ice cream          Lunch only              6\n\n\n\n\n1.3 Membaca worksheet Excel\nKita bisa memilih akan menampilkan sheet yang diperlukan dari worksheet Excel\nPada data Excel penguins terdapat worksheet dan kita akan menampilkan sheet Torgerseen Island\n\n\n\n\n\n\n\n\n\n\n#&gt; Identifikasi nama sheet\npenguins_torgersen &lt;- read_excel(\"data/penguins.xlsx\", sheet = \"Torgersen Island\", na = \"NA\")\n\n#&gt; Tampilkan data sheet\npenguins_torgersen\n\n# A tibble: 52 × 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   &lt;chr&gt;   &lt;chr&gt;              &lt;dbl&gt;         &lt;dbl&gt;             &lt;dbl&gt;       &lt;dbl&gt;\n 1 Adelie  Torgersen           39.1          18.7               181        3750\n 2 Adelie  Torgersen           39.5          17.4               186        3800\n 3 Adelie  Torgersen           40.3          18                 195        3250\n 4 Adelie  Torgersen           NA            NA                  NA          NA\n 5 Adelie  Torgersen           36.7          19.3               193        3450\n 6 Adelie  Torgersen           39.3          20.6               190        3650\n 7 Adelie  Torgersen           38.9          17.8               181        3625\n 8 Adelie  Torgersen           39.2          19.6               195        4675\n 9 Adelie  Torgersen           34.1          18.1               193        3475\n10 Adelie  Torgersen           42            20.2               190        4250\n# ℹ 42 more rows\n# ℹ 2 more variables: sex &lt;chr&gt;, year &lt;dbl&gt;\n\n\n\n\nWrite ke Excel\nKita dapat menginput data dan mengubahnya ke Excel menggunakan fungsi write_xlsx()\n\n#&gt; Buat data dan input \nbake_sale &lt;- tibble(\n  item     = factor(c(\"brownie\", \"cupcake\", \"cookie\")),\n  quantity = c(10, 5, 8)\n)\n\n#&gt; Tampilkan tabel\nbake_sale\n\n# A tibble: 3 × 2\n  item    quantity\n  &lt;fct&gt;      &lt;dbl&gt;\n1 brownie       10\n2 cupcake        5\n3 cookie         8\n\n\n\n#&gt; Selanjutnya kita create ke file Excel dan simpan di path lokasi folder\nwrite_xlsx(bake_sale, path = \"data/bake-sale.xlsx\")\n\n\n#&gt; Tampilkan data Excel yang telah dibuat\nread_excel(\"data/bake-sale.xlsx\")\n\n# A tibble: 3 × 2\n  item    quantity\n  &lt;chr&gt;      &lt;dbl&gt;\n1 brownie       10\n2 cupcake        5\n3 cookie         8"
  },
  {
    "objectID": "index.html#import-data-spreadsheet-excel",
    "href": "index.html#import-data-spreadsheet-excel",
    "title": "Topik 1 Data Import",
    "section": "1. Import Data Spreadsheet Excel",
    "text": "1. Import Data Spreadsheet Excel\n\n1.1 Library Spreadsheet Excel\nDi bagian ini, kita akan mempelajari cara memuat data dari spreadsheet Excel di R dengan package readxl. Package ini adalah tidyverse non-core, jadi kita perlu memuatnya secara eksplisit, tetapi diinstal secara otomatis ketika menginstal paket tidyverse. Kemudian, kita juga akan menggunakan package writexl, yang memungkinkan kita untuk membuat spreadsheet Excel.\n\nlibrary(readxl)\nlibrary(tidyverse)\nlibrary(writexl)\n\n\n\n1.2 Membaca spreadsheet Excel\nSemua fungsi ini memiliki sintaks yang sama seperti fungsi untuk membaca jenis file lain, misalnya, read_csv() , read_table() dll. kali ini kita akan menggunakan read_excel() . kita akan mengimport data Excel students yang telah diunduh tadi dengan menggunakan fungsi :\n\n#&gt; membaca file student.xlsx dari lokasi folder data\nstudents &lt;- read_excel(\"data/students.xlsx\")\n\nstudents\n\n# A tibble: 6 × 5\n  `Student ID` `Full Name`      favourite.food     mealPlan            AGE  \n         &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;              &lt;chr&gt;               &lt;chr&gt;\n1            1 Sunil Huffmann   Strawberry yoghurt Lunch only          4    \n2            2 Barclay Lynn     French fries       Lunch only          5    \n3            3 Jayendra Lyne    N/A                Breakfast and lunch 7    \n4            4 Leon Rossini     Anchovies          Lunch only          &lt;NA&gt; \n5            5 Chidiegwu Dunkel Pizza              Breakfast and lunch five \n6            6 Güvenç Attila    Ice cream          Lunch only          6    \n\n\nNama kolom tidak teratur,lalu kita ubah dengan fungsi col_names\n\n#&gt; mengubah nama kolom\nread_excel(\n  \"data/students.xlsx\",\n  col_names = c(\"student_id\", \"full_name\", \"favourite_food\", \"meal_plan\", \"age\"),\n  skip = 1\n)\n\n# A tibble: 6 × 5\n  student_id full_name        favourite_food     meal_plan           age  \n       &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;              &lt;chr&gt;               &lt;chr&gt;\n1          1 Sunil Huffmann   Strawberry yoghurt Lunch only          4    \n2          2 Barclay Lynn     French fries       Lunch only          5    \n3          3 Jayendra Lyne    N/A                Breakfast and lunch 7    \n4          4 Leon Rossini     Anchovies          Lunch only          &lt;NA&gt; \n5          5 Chidiegwu Dunkel Pizza              Breakfast and lunch five \n6          6 Güvenç Attila    Ice cream          Lunch only          6    \n\n\n\n1.2.1 Tipe Data\nDalam file Excel, semua nilai memiliki tipe yang berbeda tidak semuanya adalah string. Data yang mendasari dalam spreadsheet Excel lebih kompleks, seperti :\n\nBoolean, seperti TRUE , , FALSE atau NA.\nNumber, seperti “10” atau “10,5”.\nDate, yang juga dapat mencakup waktu seperti “11/1/21” atau “11/1/21 3:00 PM”.\nString teks, seperti “sepuluh”.\n\nterlihat pada kolom age dengan tipe data yang seharusnya numeric terdapat data string/huruf (five) sehingga kita ubah menjadi numeric (5)\n\nstudents &lt;- read_excel(\n  \"data/students.xlsx\",\n  col_names = c(\"student_id\", \"full_name\", \"favourite_food\", \"meal_plan\", \"age\"),\n  skip = 1,\n  na = c(\"\", \"N/A\"),\n  col_types = c(\"numeric\", \"text\", \"text\", \"text\", \"text\")\n)\n#&gt; Fungsi col_types mengubah type data\n\nstudents &lt;- students |&gt;\n  mutate(\n    age = if_else(age == \"five\", \"5\", age),\n    age = parse_number(age)\n  )\n#&gt; Fungsi mutate mengubah data dengan argumen if \n\nstudents\n\n# A tibble: 6 × 5\n  student_id full_name        favourite_food     meal_plan             age\n       &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;              &lt;chr&gt;               &lt;dbl&gt;\n1          1 Sunil Huffmann   Strawberry yoghurt Lunch only              4\n2          2 Barclay Lynn     French fries       Lunch only              5\n3          3 Jayendra Lyne    &lt;NA&gt;               Breakfast and lunch     7\n4          4 Leon Rossini     Anchovies          Lunch only             NA\n5          5 Chidiegwu Dunkel Pizza              Breakfast and lunch     5\n6          6 Güvenç Attila    Ice cream          Lunch only              6\n\n\n\n\n\n1.3 Membaca worksheet Excel\nKita bisa memilih akan menampilkan sheet yang diperlukan dari worksheet Excel\nPada data Excel penguins terdapat worksheet dan kita akan menampilkan sheet Torgerseen Island\n\n\n\n\n\n\n\n\n\n\n#&gt; Identifikasi nama sheet\npenguins_torgersen &lt;- read_excel(\"data/penguins.xlsx\", sheet = \"Torgersen Island\", na = \"NA\")\n\n#&gt; Tampilkan data sheet\npenguins_torgersen\n\n# A tibble: 52 × 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   &lt;chr&gt;   &lt;chr&gt;              &lt;dbl&gt;         &lt;dbl&gt;             &lt;dbl&gt;       &lt;dbl&gt;\n 1 Adelie  Torgersen           39.1          18.7               181        3750\n 2 Adelie  Torgersen           39.5          17.4               186        3800\n 3 Adelie  Torgersen           40.3          18                 195        3250\n 4 Adelie  Torgersen           NA            NA                  NA          NA\n 5 Adelie  Torgersen           36.7          19.3               193        3450\n 6 Adelie  Torgersen           39.3          20.6               190        3650\n 7 Adelie  Torgersen           38.9          17.8               181        3625\n 8 Adelie  Torgersen           39.2          19.6               195        4675\n 9 Adelie  Torgersen           34.1          18.1               193        3475\n10 Adelie  Torgersen           42            20.2               190        4250\n# ℹ 42 more rows\n# ℹ 2 more variables: sex &lt;chr&gt;, year &lt;dbl&gt;\n\n\n\n\n1.4 Write ke Excel\nKita dapat menginput data dan mengubahnya ke Excel menggunakan fungsi write_xlsx()\n\n#&gt; Buat data dan input \nbake_sale &lt;- tibble(\n  item     = factor(c(\"brownie\", \"cupcake\", \"cookie\")),\n  quantity = c(10, 5, 8)\n)\n\n#&gt; Tampilkan tabel\nbake_sale\n\n# A tibble: 3 × 2\n  item    quantity\n  &lt;fct&gt;      &lt;dbl&gt;\n1 brownie       10\n2 cupcake        5\n3 cookie         8\n\n\n\n#&gt; Selanjutnya kita create ke file Excel dan simpan di path lokasi folder\nwrite_xlsx(bake_sale, path = \"data/bake-sale.xlsx\")\n\n\n#&gt; Tampilkan data Excel yang telah dibuat\nread_excel(\"data/bake-sale.xlsx\")\n\n# A tibble: 3 × 2\n  item    quantity\n  &lt;chr&gt;      &lt;dbl&gt;\n1 brownie       10\n2 cupcake        5\n3 cookie         8"
  },
  {
    "objectID": "index.html#import-database",
    "href": "index.html#import-database",
    "title": "Topik 1 Data Import",
    "section": "2. Import Database",
    "text": "2. Import Database\nDalam bab ini, kita akan mempelajari package DBI untuk menyambungkan ke database dan kemudian mengambil data dengan query SQL. SQL (Structured Query Language), adalah bahasa pemrograman untuk database dan merupakan bahasa terpenting bagi semua jenis data analitik.\nPada contoh ini kita akan meng-import database SQL berisi data postingan dan pesan user Tweats. Pertama kita perlu me-load package DBI dan RMySQL, kemudian menghubungkan koneksi database tweater.\n\nlibrary(DBI)\nlibrary(RMySQL)\n\n#&gt; Koneksi database\ncon &lt;- dbConnect(RMySQL::MySQL(), \n                 dbname = \"tweater\", \n                 host = \"courses.csrrinzqubik.us-east-1.rds.amazonaws.com\", \n                 port = 3306,\n                 user = \"student\",\n                 password = \"datacamp\")\n\ndbListTables(con)\n\n[1] \"comments\" \"tweats\"   \"users\"   \n\n\n\n2.1 Tampilkan Semua Tabel\nTerlihat ada 3 tabel yaitu “comments”, “tweats”, dan “users”\n\ntables &lt;- dbListTables(con)\ntable_names &lt;- dbListTables(con)\n\n#&gt; Import semua tabel\ntables &lt;- lapply(table_names, dbReadTable, conn = con)\n\n#&gt; Tampilkan semua Tabel\ntables\n\n[[1]]\n     id tweat_id user_id            message\n1  1022       87       7              nice!\n2  1000       77       7             great!\n3  1011       49       5            love it\n4  1012       87       1   awesome! thanks!\n5  1010       88       6              yuck!\n6  1026       77       4      not my thing!\n7  1004       49       1  this is fabulous!\n8  1030       75       6           so easy!\n9  1025       88       2             oh yes\n10 1007       49       3           serious?\n11 1020       77       1 couldn't be better\n12 1014       77       1       saved my day\n\n[[2]]\n  id user_id\n1 75       3\n2 88       4\n3 77       6\n4 87       5\n5 49       1\n6 24       7\n                                                                 post\n1                                       break egg. bake egg. eat egg.\n2                           wash strawberries. add ice. blend. enjoy.\n3                       2 slices of bread. add cheese. grill. heaven.\n4               open and crush avocado. add shrimps. perfect starter.\n5 nachos. add tomato sauce, minced meat and cheese. oven for 10 mins.\n6                              just eat an apple. simply and healthy.\n        date\n1 2015-09-05\n2 2015-09-14\n3 2015-09-21\n4 2015-09-22\n5 2015-09-22\n6 2015-09-24\n\n[[3]]\n  id      name     login\n1  1 elisabeth  elismith\n2  2      mike     mikey\n3  3      thea   teatime\n4  4    thomas tomatotom\n5  5    oliver olivander\n6  6      kate  katebenn\n7  7    anjali    lianja\n\n\n\n\n2.2 Tampilkan tabel khusus\nMisal kita hanya akan menampilkan tabel users\n\n#&gt; import tabel users dari data tweater\nusers &lt;- dbReadTable(con, \"users\")\n\n#&gt; Tampilkan tabel\nusers\n\n  id      name     login\n1  1 elisabeth  elismith\n2  2      mike     mikey\n3  3      thea   teatime\n4  4    thomas tomatotom\n5  5    oliver olivander\n6  6      kate  katebenn\n7  7    anjali    lianja\n\n\n\n\n2.3 Read data dengan SELECT dan WHERE\nKita akan menampilkan data post terbaru dari tabel tweats pada tanggal lebih dari ‘2015-09-21’\n\n#&gt; menampilkan data post dari tabel tweats pada tanggal lebih dari '2015-09-21'\nlatest &lt;- dbGetQuery(con, \"SELECT post FROM tweats\nWHERE date &gt; '2015-09-21'\")\n\n#&gt; Tampilkan data\nlatest\n\n                                                                 post\n1               open and crush avocado. add shrimps. perfect starter.\n2 nachos. add tomato sauce, minced meat and cheese. oven for 10 mins.\n3                              just eat an apple. simply and healthy.\n\n\n\n\n2.4 Fungsi INNER JOIN\nMisal kita akan menampilkan gabungan data dari 2 tabel berbeda berdasarkan foreign key/id\n\n#&gt; Tampilkan nama dari tabel users dan post dari tabel tweats berdasarkan user id dimana tanggal post lebih dari '2015-09-19'\ndbGetQuery(con, \"SELECT name, post\n  FROM users INNER JOIN tweats on users.id = user_id\n    WHERE date &gt; '2015-09-19'\")\n\n       name                                                                post\n1 elisabeth nachos. add tomato sauce, minced meat and cheese. oven for 10 mins.\n2    oliver               open and crush avocado. add shrimps. perfect starter.\n3      kate                       2 slices of bread. add cheese. grill. heaven.\n4    anjali                              just eat an apple. simply and healthy."
  },
  {
    "objectID": "index.html#import-data-online",
    "href": "index.html#import-data-online",
    "title": "Topik 1 Data Import",
    "section": "3. Import Data Online",
    "text": "3. Import Data Online\nMetode ketiga yaitu import data dari url dengan fungsi read. Pertama kita perlu me-load package tidyverse kemudian gunakan fungsi read_csv() atau read_excel() sesuai format data\n\n#&gt; Load package\nlibrary(tidyverse)\n\n#&gt; Identifikasi url data\nstudents &lt;- read_csv(\"https://pos.it/r4ds-students-csv\")\n\n#&gt; Tampilkan data\nstudents\n\n# A tibble: 6 × 5\n  `Student ID` `Full Name`      favourite.food     mealPlan            AGE  \n         &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;              &lt;chr&gt;               &lt;chr&gt;\n1            1 Sunil Huffmann   Strawberry yoghurt Lunch only          4    \n2            2 Barclay Lynn     French fries       Lunch only          5    \n3            3 Jayendra Lyne    N/A                Breakfast and lunch 7    \n4            4 Leon Rossini     Anchovies          Lunch only          &lt;NA&gt; \n5            5 Chidiegwu Dunkel Pizza              Breakfast and lunch five \n6            6 Güvenç Attila    Ice cream          Lunch only          6"
  },
  {
    "objectID": "index.html#web-scrapping",
    "href": "index.html#web-scrapping",
    "title": "Topik 1 Data Import",
    "section": "5. Web Scrapping",
    "text": "5. Web Scrapping\nWeb scraping adalah metode pengambilan data dari sebuah website secara otomatis. Teknik ini sangat berguna dalam bisnis online, baik itu untuk riset pasar, riset kompetitor, atau mencari leads 1. Ada beberapa teknik web scraping yang umum dilakukan, yaitu:\n\nMenyalin data secara manual\nMenggunakan regular expression\nParsing HTML\n\nKali ini kita akan menggunakan fungsi read_html() untuk meng-ekstrak element tabel dari website dengan me-load package tidyverse dan rvest terlebih dahulu Misal kita akan meng-import data dari tabel website chart trending Youtube maka :\n\n#&gt; Load Package\nlibrary(tidyverse)\nlibrary(rvest)\n\n#&gt; Url data tabel\nurl &lt;- \"https://kworb.net/youtube/trending.html\"\nhtml &lt;- read_html(url)\n\n#&gt; Ekstrak element tabel\ntable &lt;- html |&gt; \n  html_element(\"table\") |&gt; \n  html_table()\n\n#&gt; Tampilkan Tabel\ntable\n\n# A tibble: 92 × 5\n      `` ``    Video                                              `#` Highlights\n   &lt;int&gt; &lt;chr&gt; &lt;chr&gt;                                            &lt;int&gt; &lt;chr&gt;     \n 1     1 NEW   Taylor Swift - Style (Taylor's Version) (Lyric …    30 #5 Argent…\n 2     2 NEW   Taylor Swift - Blank Space (Taylor's Version) (…    20 #7 Argent…\n 3     3 NEW   Kenia OS - Ojo X Ojo (Video Oficial)                18 #1 Mexico…\n 4     4 -2    Con To´ - Yeri Mua, Noriega, Oviña, Flow Nasty …    16 #6 Mexico…\n 5     5 -4    Mal Hombre                                          16 #10 Mexic…\n 6     6 NEW   Morat - Demasiado Lejos (Visualizer)                16 #16 Mexic…\n 7     7 NEW   Wisin, Chencho Corleone - LOCO X PERREARTE (Off…    14 #11 Argen…\n 8     8 NEW   Becky G - POR EL CONTRARIO (Lyric Video)            11 #12 Argen…\n 9     9 -6    REGGAETON CHAMPAGNE - Bellakath ft Dani Flow (V…    13 #14 Mexic…\n10    10 NEW   RIIZE 라이즈 'Talk Saxy' MV                         12 #13 Thail…\n# ℹ 82 more rows"
  },
  {
    "objectID": "index.html#import-google-sheets",
    "href": "index.html#import-google-sheets",
    "title": "Topik 1 Data Import",
    "section": "4. Import Google Sheets",
    "text": "4. Import Google Sheets\nPanggunaan package googlesheet hampir mirip dengan import online hanya saja diganti dengan sheet_id. Pertama kita me-load package googlesheets4 dan tidyverse kemudian gunakan fungsi read_sheet. Misal kita akan mengimport data dari google sheet : https://docs.google.com/spreadsheets/d/1V1nPp1tzOuutXFLb3G9Eyxi3qxeEhnOXUzL5_BcCQ0w maka kita akan mengambil id sheet sebagai key call nya yaitu 1V1nPp1tzOuutXFLb3G9Eyxi3qxeEhnOXUzL5_BcCQ0w\n\nlibrary(googlesheets4)\ngooglesheets4::gs4_deauth()\n\nread_sheet(\"1V1nPp1tzOuutXFLb3G9Eyxi3qxeEhnOXUzL5_BcCQ0w\")\n\n# A tibble: 6 × 5\n  `Student ID` `Full Name`      favourite.food     mealPlan            AGE      \n         &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;              &lt;chr&gt;               &lt;list&gt;   \n1            1 Sunil Huffmann   Strawberry yoghurt Lunch only          &lt;dbl [1]&gt;\n2            2 Barclay Lynn     French fries       Lunch only          &lt;dbl [1]&gt;\n3            3 Jayendra Lyne    N/A                Breakfast and lunch &lt;dbl [1]&gt;\n4            4 Leon Rossini     Anchovies          Lunch only          &lt;NULL&gt;   \n5            5 Chidiegwu Dunkel Pizza              Breakfast and lunch &lt;chr [1]&gt;\n6            6 Güvenç Attila    Ice cream          Lunch only          &lt;dbl [1]&gt;\n\n\n\n4.1 Menampilkan sheet khusus google sheet\nMisal dari google sheet : https://docs.google.com/spreadsheets/d/1aFu8lnD_g0yjF5O-K6SFgSEWiHPpgvFCF0NY9D6LXnY/edit#gid=0\nterdapat beberapa sheet dan kita akan menampilkan data di sheet Togersen Island maka :\n\n#&gt; Identifikasi id sheet google sheet\npenguins_sheet_id &lt;- \"1aFu8lnD_g0yjF5O-K6SFgSEWiHPpgvFCF0NY9D6LXnY\"\n\n#&gt; Tampilkan data sheet Torgersen Island\nread_sheet(penguins_sheet_id, sheet = \"Torgersen Island\")\n\n# A tibble: 52 × 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   &lt;chr&gt;   &lt;chr&gt;     &lt;list&gt;         &lt;list&gt;        &lt;list&gt;            &lt;list&gt;     \n 1 Adelie  Torgersen &lt;dbl [1]&gt;      &lt;dbl [1]&gt;     &lt;dbl [1]&gt;         &lt;dbl [1]&gt;  \n 2 Adelie  Torgersen &lt;dbl [1]&gt;      &lt;dbl [1]&gt;     &lt;dbl [1]&gt;         &lt;dbl [1]&gt;  \n 3 Adelie  Torgersen &lt;dbl [1]&gt;      &lt;dbl [1]&gt;     &lt;dbl [1]&gt;         &lt;dbl [1]&gt;  \n 4 Adelie  Torgersen &lt;chr [1]&gt;      &lt;chr [1]&gt;     &lt;chr [1]&gt;         &lt;chr [1]&gt;  \n 5 Adelie  Torgersen &lt;dbl [1]&gt;      &lt;dbl [1]&gt;     &lt;dbl [1]&gt;         &lt;dbl [1]&gt;  \n 6 Adelie  Torgersen &lt;dbl [1]&gt;      &lt;dbl [1]&gt;     &lt;dbl [1]&gt;         &lt;dbl [1]&gt;  \n 7 Adelie  Torgersen &lt;dbl [1]&gt;      &lt;dbl [1]&gt;     &lt;dbl [1]&gt;         &lt;dbl [1]&gt;  \n 8 Adelie  Torgersen &lt;dbl [1]&gt;      &lt;dbl [1]&gt;     &lt;dbl [1]&gt;         &lt;dbl [1]&gt;  \n 9 Adelie  Torgersen &lt;dbl [1]&gt;      &lt;dbl [1]&gt;     &lt;dbl [1]&gt;         &lt;dbl [1]&gt;  \n10 Adelie  Torgersen &lt;dbl [1]&gt;      &lt;dbl [1]&gt;     &lt;dbl [1]&gt;         &lt;dbl [1]&gt;  \n# ℹ 42 more rows\n# ℹ 2 more variables: sex &lt;chr&gt;, year &lt;dbl&gt;"
  }
]